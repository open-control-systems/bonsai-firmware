name: ESP32

on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - '*'

jobs:
  build-firmware:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project:
          - name: "bonsai-growlab"
            config: ".env/bonsai_growlab_configuration"

          - name: "bonsai-zero-ar-1"
            config: ".env/bonsai_zero_ar_1"

          - name: "bonsai-zero-a-1"
            config: ".env/bonsai_zero_a_1"
    env:
      SOURCE_PATH: project
      IDF_PATH: esp-idf
      IDF_VERSION: v5.3.1
      CONFIGURATION_PATH_CCACHE: .env/ccache
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          path: ${{ env.SOURCE_PATH }}
          submodules: recursive

      - name: check formatting
        uses: ./project/control-components/.github/actions/core/fmt
        with:
          PROJECT_PATH: ${{ env.SOURCE_PATH }}/projects/${{ matrix.project.name }}
          CONTROL_COMPONENTS_PATH: ${{ env.SOURCE_PATH }}/control-components

      - name: setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: setup ESP32 environment
        uses: ./project/control-components/.github/actions/esp32/env
        with:
          IDF_PATH: ${{ env.IDF_PATH }}
          IDF_VERSION: ${{ env.IDF_VERSION }}

      - name: setup system environment
        uses: ./project/control-components/.github/actions/system/env

      - name: setup ccache
        uses: ./project/control-components/.github/actions/system/ccache
        with:
          CONFIGURATION_PATH_CCACHE: ${{ env.CONFIGURATION_PATH_CCACHE }}

      - name: format firmware build version
        id: version_formatter
        uses: ./project/control-components/.github/actions/core/version

      - name: prepare configuration
        uses: ./project/control-components/.github/actions/core/config
        with:
          PROJECT_NAME: ${{ matrix.project.name }}
          BUILD_VERSION: ${{ steps.version_formatter.outputs.build_version }}
          BUILD_CONFIG_PATH: ${{ matrix.project.config }}
          PROJECT_CONFIG_PATH: ${{ env.SOURCE_PATH }}/projects/config.yml

      - name: build web gUI
        shell: bash
        run: |
          cd ${{ env.SOURCE_PATH }}/projects/${{ matrix.project.name }}/web-gui
          npm install
          npm run build
          npm run fmt
          if [ -n "$(git status --porcelain .)" ]; then
            echo "Please run 'npm run fmt' and commit the updated files."
            exit 1
          fi

      - name: build firmware
        uses: ./project/control-components/.github/actions/esp32/project
        with:
          IDF_PATH: ${{ env.IDF_PATH }}
          PROJECT_PATH: ${{ env.SOURCE_PATH }}/projects/${{ matrix.project.name }}
          CONFIGURATION_PATH_CCACHE: ${{ env.CONFIGURATION_PATH_CCACHE }}
          CONFIGURATION_PATH_PROJECT: ${{ matrix.project.config }}

      - name: upload firmware
        uses: ./project/control-components/.github/actions/esp32/upload
        with:
          PROJECT_PATH: ${{ env.SOURCE_PATH }}/projects/${{ matrix.project.name }}
          PROJECT_NAME: ${{ matrix.project.name }}
          BUILD_VERSION: ${{ steps.version_formatter.outputs.build_version }}
